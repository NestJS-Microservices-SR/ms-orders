# Dependencias
FROM node:21-alpine3.19 AS deps

WORKDIR /usr/src/app

COPY package.json ./
COPY package-lock.json ./

RUN npm install

# Builder - Construye la aplicaci√≥n
FROM node:21-alpine3.19 AS build

ARG ORDERS_DATABASE_URL
ENV DATABASE_URL=$ORDERS_DATABASE_URL

WORKDIR /usr/src/app

# Copiar de deps, los modulos de node
COPY --from=deps /usr/src/app/node_modules ./node_modules

COPY . .

RUN npx prisma migrate deploy
RUN npx prisma generate

# RUN npm run test
RUN npm run build

# Limpia modulos de desarrollo y limpia cache - Solo deja las de produccion
RUN npm ci -f --only=production && npm cache clean --force

# Crear la imagen ginal del Docker
FROM node:21-alpine3.19 AS prod

WORKDIR /usr/src/app

COPY --from=build /usr/src/app/node_modules ./node_modules
COPY --from=build /usr/src/app/dist ./dist

ENV NODE_ENV=production

# Crear usuario node, para evitar vulnerabilidades
USER node

EXPOSE 3000

CMD ["node", "dist/main.js"]